{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  register(data) {\n    return this.http.post('http://localhost:3000/users', data);\n  }\n  addFavorite(recipe) {\n    return this.http.post('http://localhost:5999/favorites', recipe);\n  }\n  removeFavorite(recipeId) {\n    return this.http.delete('http://localhost:5999/favorites/' + recipeId);\n  }\n  addCollection(recipe) {\n    return this.http.post('http://localhost:5999/collections', recipe);\n  }\n  removeCollection(id) {\n    return this.http.delete('http://localhost:5999/collections/' + id);\n  }\n  addItem(list) {\n    return this.http.post('http://localhost:3000/list', list);\n  }\n  addRecipe(recipe) {\n    return this.http.post('http://localhost:5999/recipes', recipe);\n  }\n  removeItem(itemId) {\n    return this.http.delete('http://localhost:3000/list/' + itemId);\n  }\n  updateItem(item) {\n    this.http.put('http://localhost:3000/list/' + item.id, item);\n  }\n  updateCollection(recipe) {\n    this.http.put('http://localhost:5999/collections/' + recipe.id, recipe);\n  }\n  storeRating(userId, rating, recipeId) {\n    const data = {\n      userId,\n      rating,\n      recipeId\n    };\n    this.http.post('http://localhost:3000/rating', data).subscribe(res => {\n      console.log('Thankyou for Rating!!!');\n    });\n  }\n  static #_ = this.ɵfac = function ApiServiceService_Factory(t) {\n    return new (t || ApiServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiServiceService,\n    factory: ApiServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ApiServiceService","constructor","http","register","data","post","addFavorite","recipe","removeFavorite","recipeId","delete","addCollection","removeCollection","id","addItem","list","addRecipe","removeItem","itemId","updateItem","item","put","updateCollection","storeRating","userId","rating","subscribe","res","console","log","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/shikha/Documents/Recipe-Book/Web/src/app/api-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { User } from './model/user';\nimport { Recipe } from './model/recipe';\nimport { List } from './model/list';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiServiceService {\n\n  constructor(private http: HttpClient) {\n\n   }\n\n  register(data: User){\n    return this.http.post('http://localhost:3000/users', data);\n  }\n\n  addFavorite(recipe: Recipe){\n    return this.http.post('http://localhost:5999/favorites', recipe);\n  }\n\n  removeFavorite(recipeId: number){\n    return this.http.delete('http://localhost:5999/favorites/'+recipeId);\n  }\n\n  addCollection(recipe: Recipe){\n    return this.http.post('http://localhost:5999/collections', recipe);\n  }\n\n  removeCollection(id: number){\n    return this.http.delete('http://localhost:5999/collections/'+id);\n  }\n\n  addItem(list: List){\n    return this.http.post('http://localhost:3000/list', list);\n  }\n\n  addRecipe(recipe: Recipe){\n    return this.http.post('http://localhost:5999/recipes', recipe);\n  }\n\n  removeItem(itemId: number){\n    return this.http.delete('http://localhost:3000/list/'+itemId);\n  }\n\n  updateItem(item: List){\n    this.http.put<List>('http://localhost:3000/list/' + item.id, item);\n  }\n\n  updateCollection(recipe: Recipe){\n    this.http.put<Recipe>('http://localhost:5999/collections/' + recipe.id , recipe);\n  }\n  \n  storeRating(userId: number, rating: number, recipeId: number){\n    const data = {userId, rating, recipeId};\n    this.http.post('http://localhost:3000/rating', data).subscribe(res => {\n      console.log('Thankyou for Rating!!!')\n    })\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,iBAAiB;EAE5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAEvB;EAEDC,QAAQA,CAACC,IAAU;IACjB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,6BAA6B,EAAED,IAAI,CAAC;EAC5D;EAEAE,WAAWA,CAACC,MAAc;IACxB,OAAO,IAAI,CAACL,IAAI,CAACG,IAAI,CAAC,iCAAiC,EAAEE,MAAM,CAAC;EAClE;EAEAC,cAAcA,CAACC,QAAgB;IAC7B,OAAO,IAAI,CAACP,IAAI,CAACQ,MAAM,CAAC,kCAAkC,GAACD,QAAQ,CAAC;EACtE;EAEAE,aAAaA,CAACJ,MAAc;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACG,IAAI,CAAC,mCAAmC,EAAEE,MAAM,CAAC;EACpE;EAEAK,gBAAgBA,CAACC,EAAU;IACzB,OAAO,IAAI,CAACX,IAAI,CAACQ,MAAM,CAAC,oCAAoC,GAACG,EAAE,CAAC;EAClE;EAEAC,OAAOA,CAACC,IAAU;IAChB,OAAO,IAAI,CAACb,IAAI,CAACG,IAAI,CAAC,4BAA4B,EAAEU,IAAI,CAAC;EAC3D;EAEAC,SAASA,CAACT,MAAc;IACtB,OAAO,IAAI,CAACL,IAAI,CAACG,IAAI,CAAC,+BAA+B,EAAEE,MAAM,CAAC;EAChE;EAEAU,UAAUA,CAACC,MAAc;IACvB,OAAO,IAAI,CAAChB,IAAI,CAACQ,MAAM,CAAC,6BAA6B,GAACQ,MAAM,CAAC;EAC/D;EAEAC,UAAUA,CAACC,IAAU;IACnB,IAAI,CAAClB,IAAI,CAACmB,GAAG,CAAO,6BAA6B,GAAGD,IAAI,CAACP,EAAE,EAAEO,IAAI,CAAC;EACpE;EAEAE,gBAAgBA,CAACf,MAAc;IAC7B,IAAI,CAACL,IAAI,CAACmB,GAAG,CAAS,oCAAoC,GAAGd,MAAM,CAACM,EAAE,EAAGN,MAAM,CAAC;EAClF;EAEAgB,WAAWA,CAACC,MAAc,EAAEC,MAAc,EAAEhB,QAAgB;IAC1D,MAAML,IAAI,GAAG;MAACoB,MAAM;MAAEC,MAAM;MAAEhB;IAAQ,CAAC;IACvC,IAAI,CAACP,IAAI,CAACG,IAAI,CAAC,8BAA8B,EAAED,IAAI,CAAC,CAACsB,SAAS,CAACC,GAAG,IAAG;MACnEC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAnDU9B,iBAAiB,EAAA+B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBnC,iBAAiB;IAAAoC,OAAA,EAAjBpC,iBAAiB,CAAAqC,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}