{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api-service.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/icon\";\nfunction CreateRecipeComponent_div_7_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function CreateRecipeComponent_div_7_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const i_r3 = i0.ɵɵnextContext().index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.removeIngredient(i_r3));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"remove\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateRecipeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"mat-form-field\")(2, \"mat-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-form-field\", 23)(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Measurement/Capacity/Amount\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-form-field\")(10, \"mat-label\");\n    i0.ɵɵtext(11, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, CreateRecipeComponent_div_7_button_13_Template, 3, 0, \"button\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Ingredient \", i_r3 + 1, \"\");\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.ingredients.length > 1);\n  }\n}\nfunction CreateRecipeComponent_div_24_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function CreateRecipeComponent_div_24_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const i_r9 = i0.ɵɵnextContext().index;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.removeInstruction(i_r9));\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"remove\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateRecipeComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-form-field\")(2, \"mat-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"textarea\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, CreateRecipeComponent_div_24_button_5_Template, 3, 0, \"button\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r9 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Instruction \", i_r9 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", i_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.instructions.length > 1);\n  }\n}\nexport class CreateRecipeComponent {\n  constructor(fb, api, dialogRef) {\n    this.fb = fb;\n    this.api = api;\n    this.dialogRef = dialogRef;\n    this.recipe = {\n      id: undefined,\n      title: '',\n      categoryId: '',\n      ingredients: [{\n        quantity: 0,\n        name: '',\n        ingredient: ''\n      }],\n      instructions: [],\n      nutritional_information: {\n        calories: '',\n        protein: '',\n        carbohydrates: '',\n        fat: ''\n      },\n      img: '',\n      creationDate: undefined,\n      creatorId: undefined\n    };\n    this.now = new Date();\n  }\n  ngOnInit() {\n    this.initForm();\n  }\n  initForm() {\n    // Initialize the form with FormBuilder\n    this.recipeForm = this.fb.group({\n      title: ['', Validators.required],\n      categoryId: [null, Validators.required],\n      ingredients: this.fb.array([]),\n      instructions: this.fb.array([]),\n      nutritional_information: this.fb.group({\n        calories: ['', Validators.required],\n        protein: ['', Validators.required],\n        carbohydrates: ['', Validators.required],\n        fat: ['', Validators.required]\n      }),\n      img: ['', Validators.required]\n    });\n  }\n  get ingredients() {\n    return this.recipeForm.get('ingredients');\n  }\n  get instructions() {\n    return this.recipeForm.get('instructions');\n  }\n  // Helper method to add ingredient controls to the form\n  addIngredient() {\n    this.ingredients.push(this.fb.group({\n      quantity: [null, Validators.required],\n      name: ['', Validators.required],\n      ingredient: ['']\n    }));\n  }\n  removeIngredient(index) {\n    this.ingredients.removeAt(index);\n  }\n  // Helper method to add instruction controls to the form\n  addInstruction() {\n    this.instructions.push(this.fb.control('', Validators.required));\n  }\n  removeInstruction(index) {\n    this.instructions.removeAt(index);\n  }\n  onSubmit() {\n    if (this.recipeForm.valid) {\n      console.log(this.recipeForm.value);\n      this.recipe.title = this.recipeForm.value.title;\n      this.recipe.categoryId = this.recipeForm.value.categoryId;\n      this.recipe.ingredients = this.recipeForm.value.ingredients;\n      this.recipe.instructions = this.recipeForm.value.instructions;\n      this.recipe.nutritional_information = this.recipeForm.value.nutritional_information;\n      this.recipe.img = this.recipeForm.value.img;\n      this.recipe.creationDate = this.now;\n      this.recipe.creatorId = Number(localStorage.getItem('userId'));\n      console.log(this.recipe);\n      this.api.addRecipe(this.recipe).subscribe(() => {});\n      this.dialogRef.close([]);\n      alert(\"Recipe Added!!\");\n      location.reload();\n    }\n  }\n  static #_ = this.ɵfac = function CreateRecipeComponent_Factory(t) {\n    return new (t || CreateRecipeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiServiceService), i0.ɵɵdirectiveInject(i3.MatDialogRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateRecipeComponent,\n    selectors: [[\"app-create-recipe\"]],\n    decls: 50,\n    vars: 3,\n    consts: [[1, \"row\", \"vertical-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"col-lg-6\"], [\"matInput\", \"\", \"formControlName\", \"title\", \"required\", \"\"], [\"formArrayName\", \"ingredients\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"col-lg-3\"], [\"formControlName\", \"categoryId\", \"required\", \"\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"value\", \"4\"], [\"formArrayName\", \"instructions\"], [4, \"ngFor\", \"ngForOf\"], [\"formGroupName\", \"nutritional_information\"], [\"matInput\", \"\", \"formControlName\", \"calories\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"protein\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"carbohydrates\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"fat\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"img\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", \"color\", \"primary\"], [3, \"formGroupName\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [1, \"mx-3\"], [\"matInput\", \"\", \"formControlName\", \"ingredient\"], [\"matInput\", \"\", \"formControlName\", \"quantity\", \"required\", \"\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 3, \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"matInput\", \"\", 3, \"formControlName\"]],\n    template: function CreateRecipeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateRecipeComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"mat-form-field\")(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵtemplate(7, CreateRecipeComponent_div_7_Template, 14, 3, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CreateRecipeComponent_Template_button_click_8_listener() {\n          return ctx.addIngredient();\n        });\n        i0.ɵɵtext(9, \"Add Ingredient\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"mat-form-field\")(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Category ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-select\", 7)(15, \"mat-option\", 8);\n        i0.ɵɵtext(16, \"Indian Cuisine\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-option\", 9);\n        i0.ɵɵtext(18, \"Breakfast\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-option\", 10);\n        i0.ɵɵtext(20, \"Beverage\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-option\", 11);\n        i0.ɵɵtext(22, \"Dessert\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"div\", 12);\n        i0.ɵɵtemplate(24, CreateRecipeComponent_div_24_Template, 6, 3, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CreateRecipeComponent_Template_button_click_25_listener() {\n          return ctx.addInstruction();\n        });\n        i0.ɵɵtext(26, \"Add Instruction\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 6)(28, \"mat-form-field\", 14)(29, \"mat-label\");\n        i0.ɵɵtext(30, \"Calories\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"mat-form-field\", 14)(33, \"mat-label\");\n        i0.ɵɵtext(34, \"Protein\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"mat-form-field\", 14)(37, \"mat-label\");\n        i0.ɵɵtext(38, \"Carbohydrates\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"mat-form-field\", 14)(41, \"mat-label\");\n        i0.ɵɵtext(42, \"Fat\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"mat-form-field\")(45, \"mat-label\");\n        i0.ɵɵtext(46, \"Image Link\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"textarea\", 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(48, \"button\", 20);\n        i0.ɵɵtext(49, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", (tmp_1_0 = ctx.recipeForm.get(\"ingredients\")) == null ? null : tmp_1_0.value);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", (tmp_2_0 = ctx.recipeForm.get(\"instructions\")) == null ? null : tmp_2_0.value);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i5.MatButton, i5.MatIconButton, i6.MatFormField, i6.MatLabel, i7.MatSelect, i8.MatOption, i9.MatInput, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i10.MatIcon],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵlistener","CreateRecipeComponent_div_7_button_13_Template_button_click_0_listener","ɵɵrestoreView","_r7","i_r3","ɵɵnextContext","index","ctx_r5","ɵɵresetView","removeIngredient","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵtemplate","CreateRecipeComponent_div_7_button_13_Template","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","ingredients","length","CreateRecipeComponent_div_24_button_5_Template_button_click_0_listener","_r13","i_r9","ctx_r11","removeInstruction","CreateRecipeComponent_div_24_button_5_Template","ɵɵpropertyInterpolate","ctx_r1","instructions","CreateRecipeComponent","constructor","fb","api","dialogRef","recipe","id","undefined","title","categoryId","quantity","name","ingredient","nutritional_information","calories","protein","carbohydrates","fat","img","creationDate","creatorId","now","Date","ngOnInit","initForm","recipeForm","group","required","array","get","addIngredient","push","removeAt","addInstruction","control","onSubmit","valid","console","log","value","Number","localStorage","getItem","addRecipe","subscribe","close","alert","location","reload","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ApiServiceService","i3","MatDialogRef","_2","selectors","decls","vars","consts","template","CreateRecipeComponent_Template","rf","ctx","CreateRecipeComponent_Template_form_ngSubmit_0_listener","CreateRecipeComponent_div_7_Template","CreateRecipeComponent_Template_button_click_8_listener","CreateRecipeComponent_div_24_Template","CreateRecipeComponent_Template_button_click_25_listener","tmp_1_0","tmp_2_0"],"sources":["/Users/shikha/Documents/Recipe-Book/Web/src/app/create-recipe/create-recipe.component.ts","/Users/shikha/Documents/Recipe-Book/Web/src/app/create-recipe/create-recipe.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ApiServiceService } from '../api-service.service';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { Recipe } from '../model/recipe';\n\n\n@Component({\n  selector: 'app-create-recipe',\n  templateUrl: './create-recipe.component.html',\n  styleUrls: ['./create-recipe.component.css']\n})\nexport class CreateRecipeComponent implements OnInit {\n\n  recipeForm!: FormGroup;\n  \n \n  constructor(private fb: FormBuilder, private api: ApiServiceService, private dialogRef: MatDialogRef<CreateRecipeComponent>) { }\n \n  ngOnInit(): void {\n    this.initForm();\n  }\n \n  initForm() {\n    // Initialize the form with FormBuilder\nthis.recipeForm = this.fb.group({\n      title: ['', Validators.required],\n      categoryId: [null, Validators.required],\n      ingredients: this.fb.array([]),\n      instructions: this.fb.array([]),\nnutritional_information: this.fb.group({\n        calories: ['', Validators.required],\n        protein: ['', Validators.required],\n        carbohydrates: ['', Validators.required],\n        fat: ['', Validators.required],\n      }),\n      img: ['', Validators.required],\n    });\n  }\n \n   get ingredients(){\n    return this.recipeForm.get('ingredients') as FormArray;\n   }\n\n   get instructions(){\n    return this.recipeForm.get('instructions') as FormArray;\n   }\n  // Helper method to add ingredient controls to the form\n  addIngredient() {\n    this.ingredients.push(\n      this.fb.group({\n        quantity: [null, Validators.required],\n        name: ['', Validators.required],\n        ingredient: ['']\n    })\n    );\n  }\n\n  removeIngredient(index: number){\n    this.ingredients.removeAt(index);\n  }\n \n  // Helper method to add instruction controls to the form\n  addInstruction() {\n   this.instructions.push(this.fb.control('', Validators.required));\n  }\n \n  removeInstruction(index: number){\n    this.instructions.removeAt(index);\n  }\n\n  recipe: Recipe = {\n    id: undefined!,\n    title: '',\n    categoryId: '',\n    ingredients: [{\n        quantity: 0,\n        name: '',\n        ingredient: ''\n    }],\n    instructions: [],\n    nutritional_information: {\n      calories: '',\n        protein: '',\n        carbohydrates: '',\n        fat: ''\n    },\n    img: '',\n    creationDate: undefined!,\n    creatorId: undefined!\n  }\n\n  now = new Date()\n  onSubmit() {\n    if (this.recipeForm.valid) {\n      console.log(this.recipeForm.value)\n      this.recipe.title = this.recipeForm.value.title;\n      this.recipe.categoryId = this.recipeForm.value.categoryId;\n      this.recipe.ingredients = this.recipeForm.value.ingredients;\n      this.recipe.instructions = this.recipeForm.value.instructions;\n      this.recipe.nutritional_information = this.recipeForm.value.nutritional_information;\n      this.recipe.img = this.recipeForm.value.img;\n      \n      this.recipe.creationDate = this.now ;\n      this.recipe.creatorId = Number(localStorage.getItem('userId'));\n\n      console.log(this.recipe)\n      this.api.addRecipe(this.recipe).subscribe(()=>{\n      });\n      this.dialogRef.close([]);\n      alert(\"Recipe Added!!\")\n      location.reload()\n    }\n  }\n}","\n<form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\" class=\"row vertical-form\">\n <div class=\"col-lg-6\">\n  <mat-form-field>\n    <mat-label>Title</mat-label>\n    <input matInput formControlName=\"title\" required>\n  </mat-form-field>\n \n  <!-- Ingredients FormArray -->\n  <div formArrayName=\"ingredients\">\n    <div *ngFor=\"let ingredient of recipeForm.get('ingredients')?.value; let i = index\" [formGroupName]=\"i\">\n      <mat-form-field >\n        <mat-label>Ingredient {{ i + 1 }}</mat-label>\n        <input matInput formControlName=\"name\" required>\n      </mat-form-field>\n \n      <mat-form-field class=\"mx-3\">\n        <mat-label>Measurement/Capacity/Amount</mat-label>\n        <input matInput formControlName=\"ingredient\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Quantity</mat-label>\n        <input matInput formControlName=\"quantity\" required>\n      </mat-form-field>\n\n      <button mat-icon-button color=\"warn\" *ngIf=\"ingredients.length > 1\" (click)=\"removeIngredient(i)\">\n        <mat-icon>remove</mat-icon>\n      </button>\n    </div>\n  </div>\n  <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"addIngredient()\" >Add Ingredient</button>\n</div>\n  <div class=\"col-lg-3\">\n  <mat-form-field>\n    <mat-label>Category ID</mat-label>\n    <mat-select formControlName=\"categoryId\" required>\n      <mat-option value=\"1\">Indian Cuisine</mat-option>\n      <mat-option value=\"2\">Breakfast</mat-option>\n      <mat-option value=\"3\">Beverage</mat-option>\n      <mat-option value=\"4\">Dessert</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <!-- Instructions FormArray -->\n  <div formArrayName=\"instructions\">\n    <div *ngFor=\"let instruction of recipeForm.get('instructions')?.value; let i = index\">\n      <mat-form-field>\n        <mat-label>Instruction {{ i + 1 }}</mat-label>\n        <textarea matInput formControlName=\"{{i}}\"></textarea>\n      </mat-form-field>\n\n      <button mat-icon-button color=\"warn\" *ngIf=\"instructions.length > 1\" (click)=\"removeInstruction(i)\">\n        <mat-icon>remove</mat-icon>\n      </button>\n    </div>\n  </div>\n  <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"addInstruction()\">Add Instruction</button>\n</div>\n  <div class=\"col-lg-3\">\n  <!-- Nutritional Information FormGroup -->\n  <mat-form-field formGroupName=\"nutritional_information\">\n    <mat-label>Calories</mat-label>\n    <input matInput formControlName=\"calories\" required>\n  </mat-form-field>\n \n  <mat-form-field formGroupName=\"nutritional_information\">\n    <mat-label>Protein</mat-label>\n    <input matInput formControlName=\"protein\" required>\n  </mat-form-field>\n \n  <mat-form-field formGroupName=\"nutritional_information\">\n    <mat-label>Carbohydrates</mat-label>\n    <input matInput formControlName=\"carbohydrates\" required>\n  </mat-form-field>\n \n  <mat-form-field formGroupName=\"nutritional_information\">\n    <mat-label>Fat</mat-label>\n    <input matInput formControlName=\"fat\" required>\n  </mat-form-field>\n \n  <!-- Remaining Fields -->\n  <mat-form-field>\n    <mat-label>Image Link</mat-label>\n    <textarea matInput formControlName=\"img\" required></textarea>\n  </mat-form-field>\n</div>\n  <button mat-raised-button type=\"submit\" color=\"primary\">Submit</button>\n</form>"],"mappings":"AACA,SAAoDA,UAAU,QAAQ,gBAAgB;;;;;;;;;;;;;;;ICyBhFC,EAAA,CAAAC,cAAA,iBAAkG;IAA9BD,EAAA,CAAAE,UAAA,mBAAAC,uEAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,IAAA,GAAAN,EAAA,CAAAO,aAAA,GAAAC,KAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAU,WAAA,CAAAD,MAAA,CAAAE,gBAAA,CAAAL,IAAA,CAAmB;IAAA,EAAC;IAC/FN,EAAA,CAAAC,cAAA,eAAU;IAAAD,EAAA,CAAAY,MAAA,aAAM;IAAAZ,EAAA,CAAAa,YAAA,EAAW;;;;;IAjB/Bb,EAAA,CAAAC,cAAA,cAAwG;IAEzFD,EAAA,CAAAY,MAAA,GAAsB;IAAAZ,EAAA,CAAAa,YAAA,EAAY;IAC7Cb,EAAA,CAAAc,SAAA,gBAAgD;IAClDd,EAAA,CAAAa,YAAA,EAAiB;IAEjBb,EAAA,CAAAC,cAAA,yBAA6B;IAChBD,EAAA,CAAAY,MAAA,kCAA2B;IAAAZ,EAAA,CAAAa,YAAA,EAAY;IAClDb,EAAA,CAAAc,SAAA,gBAA6C;IAC/Cd,EAAA,CAAAa,YAAA,EAAiB;IAEjBb,EAAA,CAAAC,cAAA,qBAAgB;IACHD,EAAA,CAAAY,MAAA,gBAAQ;IAAAZ,EAAA,CAAAa,YAAA,EAAY;IAC/Bb,EAAA,CAAAc,SAAA,iBAAoD;IACtDd,EAAA,CAAAa,YAAA,EAAiB;IAEjBb,EAAA,CAAAe,UAAA,KAAAC,8CAAA,qBAES;IACXhB,EAAA,CAAAa,YAAA,EAAM;;;;;IAnB8Eb,EAAA,CAAAiB,UAAA,kBAAAX,IAAA,CAAmB;IAExFN,EAAA,CAAAkB,SAAA,GAAsB;IAAtBlB,EAAA,CAAAmB,kBAAA,gBAAAb,IAAA,SAAsB;IAcGN,EAAA,CAAAkB,SAAA,IAA4B;IAA5BlB,EAAA,CAAAiB,UAAA,SAAAG,MAAA,CAAAC,WAAA,CAAAC,MAAA,KAA4B;;;;;;IAyBlEtB,EAAA,CAAAC,cAAA,iBAAoG;IAA/BD,EAAA,CAAAE,UAAA,mBAAAqB,uEAAA;MAAAvB,EAAA,CAAAI,aAAA,CAAAoB,IAAA;MAAA,MAAAC,IAAA,GAAAzB,EAAA,CAAAO,aAAA,GAAAC,KAAA;MAAA,MAAAkB,OAAA,GAAA1B,EAAA,CAAAO,aAAA;MAAA,OAASP,EAAA,CAAAU,WAAA,CAAAgB,OAAA,CAAAC,iBAAA,CAAAF,IAAA,CAAoB;IAAA,EAAC;IACjGzB,EAAA,CAAAC,cAAA,eAAU;IAAAD,EAAA,CAAAY,MAAA,aAAM;IAAAZ,EAAA,CAAAa,YAAA,EAAW;;;;;IAP/Bb,EAAA,CAAAC,cAAA,UAAsF;IAEvED,EAAA,CAAAY,MAAA,GAAuB;IAAAZ,EAAA,CAAAa,YAAA,EAAY;IAC9Cb,EAAA,CAAAc,SAAA,mBAAsD;IACxDd,EAAA,CAAAa,YAAA,EAAiB;IAEjBb,EAAA,CAAAe,UAAA,IAAAa,8CAAA,qBAES;IACX5B,EAAA,CAAAa,YAAA,EAAM;;;;;IAPSb,EAAA,CAAAkB,SAAA,GAAuB;IAAvBlB,EAAA,CAAAmB,kBAAA,iBAAAM,IAAA,SAAuB;IACfzB,EAAA,CAAAkB,SAAA,GAAuB;IAAvBlB,EAAA,CAAA6B,qBAAA,oBAAAJ,IAAA,CAAuB;IAGNzB,EAAA,CAAAkB,SAAA,GAA6B;IAA7BlB,EAAA,CAAAiB,UAAA,SAAAa,MAAA,CAAAC,YAAA,CAAAT,MAAA,KAA6B;;;ADrCzE,OAAM,MAAOU,qBAAqB;EAKhCC,YAAoBC,EAAe,EAAUC,GAAsB,EAAUC,SAA8C;IAAvG,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,GAAG,GAAHA,GAAG;IAA6B,KAAAC,SAAS,GAATA,SAAS;IAsDtF,KAAAC,MAAM,GAAW;MACfC,EAAE,EAAEC,SAAU;MACdC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,EAAE;MACdpB,WAAW,EAAE,CAAC;QACVqB,QAAQ,EAAE,CAAC;QACXC,IAAI,EAAE,EAAE;QACRC,UAAU,EAAE;OACf,CAAC;MACFb,YAAY,EAAE,EAAE;MAChBc,uBAAuB,EAAE;QACvBC,QAAQ,EAAE,EAAE;QACVC,OAAO,EAAE,EAAE;QACXC,aAAa,EAAE,EAAE;QACjBC,GAAG,EAAE;OACR;MACDC,GAAG,EAAE,EAAE;MACPC,YAAY,EAAEZ,SAAU;MACxBa,SAAS,EAAEb;KACZ;IAED,KAAAc,GAAG,GAAG,IAAIC,IAAI,EAAE;EA3E+G;EAE/HC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQA,CAAA;IACN;IACJ,IAAI,CAACC,UAAU,GAAG,IAAI,CAACvB,EAAE,CAACwB,KAAK,CAAC;MAC1BlB,KAAK,EAAE,CAAC,EAAE,EAAEzC,UAAU,CAAC4D,QAAQ,CAAC;MAChClB,UAAU,EAAE,CAAC,IAAI,EAAE1C,UAAU,CAAC4D,QAAQ,CAAC;MACvCtC,WAAW,EAAE,IAAI,CAACa,EAAE,CAAC0B,KAAK,CAAC,EAAE,CAAC;MAC9B7B,YAAY,EAAE,IAAI,CAACG,EAAE,CAAC0B,KAAK,CAAC,EAAE,CAAC;MACrCf,uBAAuB,EAAE,IAAI,CAACX,EAAE,CAACwB,KAAK,CAAC;QAC/BZ,QAAQ,EAAE,CAAC,EAAE,EAAE/C,UAAU,CAAC4D,QAAQ,CAAC;QACnCZ,OAAO,EAAE,CAAC,EAAE,EAAEhD,UAAU,CAAC4D,QAAQ,CAAC;QAClCX,aAAa,EAAE,CAAC,EAAE,EAAEjD,UAAU,CAAC4D,QAAQ,CAAC;QACxCV,GAAG,EAAE,CAAC,EAAE,EAAElD,UAAU,CAAC4D,QAAQ;OAC9B,CAAC;MACFT,GAAG,EAAE,CAAC,EAAE,EAAEnD,UAAU,CAAC4D,QAAQ;KAC9B,CAAC;EACJ;EAEC,IAAItC,WAAWA,CAAA;IACd,OAAO,IAAI,CAACoC,UAAU,CAACI,GAAG,CAAC,aAAa,CAAc;EACvD;EAEA,IAAI9B,YAAYA,CAAA;IACf,OAAO,IAAI,CAAC0B,UAAU,CAACI,GAAG,CAAC,cAAc,CAAc;EACxD;EACD;EACAC,aAAaA,CAAA;IACX,IAAI,CAACzC,WAAW,CAAC0C,IAAI,CACnB,IAAI,CAAC7B,EAAE,CAACwB,KAAK,CAAC;MACZhB,QAAQ,EAAE,CAAC,IAAI,EAAE3C,UAAU,CAAC4D,QAAQ,CAAC;MACrChB,IAAI,EAAE,CAAC,EAAE,EAAE5C,UAAU,CAAC4D,QAAQ,CAAC;MAC/Bf,UAAU,EAAE,CAAC,EAAE;KAClB,CAAC,CACD;EACH;EAEAjC,gBAAgBA,CAACH,KAAa;IAC5B,IAAI,CAACa,WAAW,CAAC2C,QAAQ,CAACxD,KAAK,CAAC;EAClC;EAEA;EACAyD,cAAcA,CAAA;IACb,IAAI,CAAClC,YAAY,CAACgC,IAAI,CAAC,IAAI,CAAC7B,EAAE,CAACgC,OAAO,CAAC,EAAE,EAAEnE,UAAU,CAAC4D,QAAQ,CAAC,CAAC;EACjE;EAEAhC,iBAAiBA,CAACnB,KAAa;IAC7B,IAAI,CAACuB,YAAY,CAACiC,QAAQ,CAACxD,KAAK,CAAC;EACnC;EAwBA2D,QAAQA,CAAA;IACN,IAAI,IAAI,CAACV,UAAU,CAACW,KAAK,EAAE;MACzBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,UAAU,CAACc,KAAK,CAAC;MAClC,IAAI,CAAClC,MAAM,CAACG,KAAK,GAAG,IAAI,CAACiB,UAAU,CAACc,KAAK,CAAC/B,KAAK;MAC/C,IAAI,CAACH,MAAM,CAACI,UAAU,GAAG,IAAI,CAACgB,UAAU,CAACc,KAAK,CAAC9B,UAAU;MACzD,IAAI,CAACJ,MAAM,CAAChB,WAAW,GAAG,IAAI,CAACoC,UAAU,CAACc,KAAK,CAAClD,WAAW;MAC3D,IAAI,CAACgB,MAAM,CAACN,YAAY,GAAG,IAAI,CAAC0B,UAAU,CAACc,KAAK,CAACxC,YAAY;MAC7D,IAAI,CAACM,MAAM,CAACQ,uBAAuB,GAAG,IAAI,CAACY,UAAU,CAACc,KAAK,CAAC1B,uBAAuB;MACnF,IAAI,CAACR,MAAM,CAACa,GAAG,GAAG,IAAI,CAACO,UAAU,CAACc,KAAK,CAACrB,GAAG;MAE3C,IAAI,CAACb,MAAM,CAACc,YAAY,GAAG,IAAI,CAACE,GAAG;MACnC,IAAI,CAAChB,MAAM,CAACe,SAAS,GAAGoB,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC;MAE9DL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjC,MAAM,CAAC;MACxB,IAAI,CAACF,GAAG,CAACwC,SAAS,CAAC,IAAI,CAACtC,MAAM,CAAC,CAACuC,SAAS,CAAC,MAAI,CAC9C,CAAC,CAAC;MACF,IAAI,CAACxC,SAAS,CAACyC,KAAK,CAAC,EAAE,CAAC;MACxBC,KAAK,CAAC,gBAAgB,CAAC;MACvBC,QAAQ,CAACC,MAAM,EAAE;;EAErB;EAAC,QAAAC,CAAA,G;qBArGUjD,qBAAqB,EAAAhC,EAAA,CAAAkF,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAApF,EAAA,CAAAkF,iBAAA,CAAAG,EAAA,CAAAC,iBAAA,GAAAtF,EAAA,CAAAkF,iBAAA,CAAAK,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBzD,qBAAqB;IAAA0D,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCblChG,EAAA,CAAAC,cAAA,cAAiF;QAAlDD,EAAA,CAAAE,UAAA,sBAAAgG,wDAAA;UAAA,OAAYD,GAAA,CAAA9B,QAAA,EAAU;QAAA,EAAC;QACrDnE,EAAA,CAAAC,cAAA,aAAsB;QAERD,EAAA,CAAAY,MAAA,YAAK;QAAAZ,EAAA,CAAAa,YAAA,EAAY;QAC5Bb,EAAA,CAAAc,SAAA,eAAiD;QACnDd,EAAA,CAAAa,YAAA,EAAiB;QAGjBb,EAAA,CAAAC,cAAA,aAAiC;QAC/BD,EAAA,CAAAe,UAAA,IAAAoF,oCAAA,kBAmBM;QACRnG,EAAA,CAAAa,YAAA,EAAM;QACNb,EAAA,CAAAC,cAAA,gBAAmF;QAA3BD,EAAA,CAAAE,UAAA,mBAAAkG,uDAAA;UAAA,OAASH,GAAA,CAAAnC,aAAA,EAAe;QAAA,EAAC;QAAE9D,EAAA,CAAAY,MAAA,qBAAc;QAAAZ,EAAA,CAAAa,YAAA,EAAS;QAE1Gb,EAAA,CAAAC,cAAA,cAAsB;QAETD,EAAA,CAAAY,MAAA,mBAAW;QAAAZ,EAAA,CAAAa,YAAA,EAAY;QAClCb,EAAA,CAAAC,cAAA,qBAAkD;QAC1BD,EAAA,CAAAY,MAAA,sBAAc;QAAAZ,EAAA,CAAAa,YAAA,EAAa;QACjDb,EAAA,CAAAC,cAAA,qBAAsB;QAAAD,EAAA,CAAAY,MAAA,iBAAS;QAAAZ,EAAA,CAAAa,YAAA,EAAa;QAC5Cb,EAAA,CAAAC,cAAA,sBAAsB;QAAAD,EAAA,CAAAY,MAAA,gBAAQ;QAAAZ,EAAA,CAAAa,YAAA,EAAa;QAC3Cb,EAAA,CAAAC,cAAA,sBAAsB;QAAAD,EAAA,CAAAY,MAAA,eAAO;QAAAZ,EAAA,CAAAa,YAAA,EAAa;QAI9Cb,EAAA,CAAAC,cAAA,eAAkC;QAChCD,EAAA,CAAAe,UAAA,KAAAsF,qCAAA,kBASM;QACRrG,EAAA,CAAAa,YAAA,EAAM;QACNb,EAAA,CAAAC,cAAA,iBAAmF;QAA3BD,EAAA,CAAAE,UAAA,mBAAAoG,wDAAA;UAAA,OAASL,GAAA,CAAAhC,cAAA,EAAgB;QAAA,EAAC;QAACjE,EAAA,CAAAY,MAAA,uBAAe;QAAAZ,EAAA,CAAAa,YAAA,EAAS;QAE3Gb,EAAA,CAAAC,cAAA,cAAsB;QAGTD,EAAA,CAAAY,MAAA,gBAAQ;QAAAZ,EAAA,CAAAa,YAAA,EAAY;QAC/Bb,EAAA,CAAAc,SAAA,iBAAoD;QACtDd,EAAA,CAAAa,YAAA,EAAiB;QAEjBb,EAAA,CAAAC,cAAA,0BAAwD;QAC3CD,EAAA,CAAAY,MAAA,eAAO;QAAAZ,EAAA,CAAAa,YAAA,EAAY;QAC9Bb,EAAA,CAAAc,SAAA,iBAAmD;QACrDd,EAAA,CAAAa,YAAA,EAAiB;QAEjBb,EAAA,CAAAC,cAAA,0BAAwD;QAC3CD,EAAA,CAAAY,MAAA,qBAAa;QAAAZ,EAAA,CAAAa,YAAA,EAAY;QACpCb,EAAA,CAAAc,SAAA,iBAAyD;QAC3Dd,EAAA,CAAAa,YAAA,EAAiB;QAEjBb,EAAA,CAAAC,cAAA,0BAAwD;QAC3CD,EAAA,CAAAY,MAAA,WAAG;QAAAZ,EAAA,CAAAa,YAAA,EAAY;QAC1Bb,EAAA,CAAAc,SAAA,iBAA+C;QACjDd,EAAA,CAAAa,YAAA,EAAiB;QAGjBb,EAAA,CAAAC,cAAA,sBAAgB;QACHD,EAAA,CAAAY,MAAA,kBAAU;QAAAZ,EAAA,CAAAa,YAAA,EAAY;QACjCb,EAAA,CAAAc,SAAA,oBAA6D;QAC/Dd,EAAA,CAAAa,YAAA,EAAiB;QAEjBb,EAAA,CAAAC,cAAA,kBAAwD;QAAAD,EAAA,CAAAY,MAAA,cAAM;QAAAZ,EAAA,CAAAa,YAAA,EAAS;;;;;QArFnEb,EAAA,CAAAiB,UAAA,cAAAgF,GAAA,CAAAxC,UAAA,CAAwB;QASEzD,EAAA,CAAAkB,SAAA,GAAyC;QAAzClB,EAAA,CAAAiB,UAAA,aAAAsF,OAAA,GAAAN,GAAA,CAAAxC,UAAA,CAAAI,GAAA,kCAAA0C,OAAA,CAAAhC,KAAA,CAAyC;QAmCxCvE,EAAA,CAAAkB,SAAA,IAA0C;QAA1ClB,EAAA,CAAAiB,UAAA,aAAAuF,OAAA,GAAAP,GAAA,CAAAxC,UAAA,CAAAI,GAAA,mCAAA2C,OAAA,CAAAjC,KAAA,CAA0C"},"metadata":{},"sourceType":"module","externalDependencies":[]}